#ifndef OPTABLE_H
#define OPTABLE_H

// == Main Operations==
// (0x0_)
void NOP();
void LD_BC_U16();
void LD_0xBC_A();
void INC_BC();
void INC_B();
void DEC_B();
void LD_B_U8();
void RLCA();
void LD_0xU16_SP();
void ADD_HL_BC();
void LD_A_0xBC();
void DEC_BC();
void INC_C();
void DEC_C();
void LD_C_U8();
void RRCA();

// (0x1_)
void STOP();
void LD_DE_U16();
void LD_0xDE_A();
void INC_DE();
void INC_D();
void DEC_D();
void LD_D_U8();
void RLA();
void JR_I8();
void ADD_HL_DE();
void LD_A_0xDE();
void DEC_DE();
void INC_E();
void DEC_E();
void LD_E_U8();
void RRA();

// (0x2_)
void JR_NZ_I8();
void LD_HL_U16();
void LD_0xHLI_A();
void INC_HL();
void INC_H();
void DEC_H();
void LD_H_U8();
void DAA();
void JR_Z_I8();
void ADD_HL_HL();
void LD_A_0xHLI();
void DEC_HL();
void INC_L();
void DEC_L();
void LD_L_U8();
void CPL();

// (0x3_)
void JR_NC_I8();
void LD_SP_U16();
void LD_0xHLD_A();
void INC_SP();
void INC_0xHL();
void DEC_0xHL();
void LD_0xHL_U8();
void SCF();
void JR_C_I8();
void ADD_HL_SP();
void LD_A_0xHLD();
void DEC_SP();
void INC_A();
void DEC_A();
void LD_A_U8();
void CCF();

// (0x4_)
void LD_B_B();
void LD_B_C();
void LD_B_D();
void LD_B_E();
void LD_B_H();
void LD_B_L();
void LD_B_0xHL();
void LD_B_A();
void LD_C_B();
void LD_C_C();
void LD_C_D();
void LD_C_E();
void LD_C_H();
void LD_C_L();
void LD_C_0xHL();
void LD_C_A();

// (0x5_)
void LD_D_B();
void LD_D_C();
void LD_D_D();
void LD_D_E();
void LD_D_H();
void LD_D_L();
void LD_D_0xHL();
void LD_D_A();
void LD_E_B();
void LD_E_C();
void LD_E_D();
void LD_E_E();
void LD_E_H();
void LD_E_L();
void LD_E_0xHL();
void LD_E_A();

// (0x6_)
void LD_H_B();
void LD_H_C();
void LD_H_D();
void LD_H_E();
void LD_H_H();
void LD_H_L();
void LD_H_0xHL();
void LD_H_A();
void LD_L_B();
void LD_L_C();
void LD_L_D();
void LD_L_E();
void LD_L_H();
void LD_L_L();
void LD_L_0xHL();
void LD_L_A();

// (0x7_)
void LD_0xHL_B();
void LD_0xHL_C();
void LD_0xHL_D();
void LD_0xHL_E();
void LD_0xHL_H();
void LD_0xHL_L();
void HALT();
void LD_0xHL_A();
void LD_A_B();
void LD_A_C();
void LD_A_D();
void LD_A_E();
void LD_A_H();
void LD_A_L();
void LD_A_0xHL();
void LD_A_A();

// (0x8_)
void ADD_A_B();
void ADD_A_C();
void ADD_A_D();
void ADD_A_E();
void ADD_A_H();
void ADD_A_L();
void ADD_A_0xHL();
void ADD_A_A();
void ADC_A_B();
void ADC_A_C();
void ADC_A_D();
void ADC_A_E();
void ADC_A_H();
void ADC_A_L();
void ADC_A_0xHL();
void ADC_A_A();

// (0x9_)
void SUB_A_B();
void SUB_A_C();
void SUB_A_D();
void SUB_A_E();
void SUB_A_H();
void SUB_A_L();
void SUB_A_0xHL();
void SUB_A_A();
void SBC_A_B();
void SBC_A_C();
void SBC_A_D();
void SBC_A_E();
void SBC_A_H();
void SBC_A_L();
void SBC_A_0xHL();
void SBC_A_A();

// (0xA_)
void AND_A_B();
void AND_A_C();
void AND_A_D();
void AND_A_E();
void AND_A_H();
void AND_A_L();
void AND_A_0xHL();
void AND_A_A();
void XOR_A_B();
void XOR_A_C();
void XOR_A_D();
void XOR_A_E();
void XOR_A_H();
void XOR_A_L();
void XOR_A_0xHL();
void XOR_A_A();

// (0xB_)
void OR_A_B();
void OR_A_C();
void OR_A_D();
void OR_A_E();
void OR_A_H();
void OR_A_L();
void OR_A_0xHL();
void OR_A_A();
void CP_A_B();
void CP_A_C();
void CP_A_D();
void CP_A_E();
void CP_A_H();
void CP_A_L();
void CP_A_0xHL();
void CP_A_A();

// (0xC_)
void RET_NZ();
void POP_BC();
void JP_NZ_U16();
void JP_U16();
void CALL_NZ_U16();
void PUSH_BC();
void ADD_A_U8();
void RST_00H();
void RET_Z();
void RET();
void JP_Z_U16();
void PREFIX_CB();
void CALL_Z_U16();
void CALL_U16();
void ADC_A_U8();
void RST_08H();

// (0xD_)
void RET_NC();
void POP_DE();
void JP_NC_U16();
// NULL
void CALL_NC_U16();
void PUSH_DE();
void SUB_A_U8();
void RST_10H();
void RET_C();
void RETI();
void JP_C_U16();
// NULL
void CALL_C_U16();
// NULL
void SBC_A_U8();
void RST_18H();

// (0xE_)
void LDH_0xU8_A();
void POP_HL();
void LDH_0xC_A();
// NULL
// NULL
void PUSH_HL();
void AND_A_U8();
void RST_20H();
void ADD_SP_I8();
void JP_HL();
void LD_0xU16_A();
// NULL
// NULL
// NULL
void XOR_A_U8();
void RST_28H();

// (0xF_)
void LDH_A_0xU8();
void POP_AF();
void LDH_A_0xC();
void DI();
// NULL
void PUSH_AF();
void OR_A_U8();
void RST_30H();
void LD_HL_SP_I8();
void LD_SP_HL();
void LD_A_0xU16();
void EI();
// NULL
// NULL
void CP_A_U8();
void RST_38H();



// ==(0xCB) Extended==

// (0x00)
void RLC_B();
void RLC_C();
void RLC_D();
void RLC_E();
void RLC_H();
void RLC_L();
void RLC_0xHL();
void RLC_A();
void RRC_B();
void RRC_C();
void RRC_D();
void RRC_E();
void RRC_H();
void RRC_L();
void RRC_0xHL();
void RRC_A();

// (0x10)
void RL_B();
void RL_C();
void RL_D();
void RL_E();
void RL_H();
void RL_L();
void RL_0xHL();
void RL_A();
void RR_B();
void RR_C();
void RR_D();
void RR_E();
void RR_H();
void RR_L();
void RR_0xHL();
void RR_A();

// (0x20)
void SLA_B();
void SLA_C();
void SLA_D();
void SLA_E();
void SLA_H();
void SLA_L();
void SLA_0xHL();
void SLA_A();
void SRA_B();
void SRA_C();
void SRA_D();
void SRA_E();
void SRA_H();
void SRA_L();
void SRA_0xHL();
void SRA_A();

// (0x30)
void SWAP_B();
void SWAP_C();
void SWAP_D();
void SWAP_E();
void SWAP_H();
void SWAP_L();
void SWAP_0xHL();
void SWAP_A();
void SRL_B();
void SRL_C();
void SRL_D();
void SRL_E();
void SRL_H();
void SRL_L();
void SRL_0xHL();
void SRL_A();

// (0x40)
void BIT_0_B();
void BIT_0_C();
void BIT_0_D();
void BIT_0_E();
void BIT_0_H();
void BIT_0_L();
void BIT_0_0xHL();
void BIT_0_A();
void BIT_1_B();
void BIT_1_C();
void BIT_1_D();
void BIT_1_E();
void BIT_1_H();
void BIT_1_L();
void BIT_1_0xHL();
void BIT_1_A();

// (0x50)
void BIT_2_B();
void BIT_2_C();
void BIT_2_D();
void BIT_2_E();
void BIT_2_H();
void BIT_2_L();
void BIT_2_0xHL();
void BIT_2_A();
void BIT_3_B();
void BIT_3_C();
void BIT_3_D();
void BIT_3_E();
void BIT_3_H();
void BIT_3_L();
void BIT_3_0xHL();
void BIT_3_A();

// (0x60)
void BIT_4_B();
void BIT_4_C();
void BIT_4_D();
void BIT_4_E();
void BIT_4_H();
void BIT_4_L();
void BIT_4_0xHL();
void BIT_4_A();
void BIT_5_B();
void BIT_5_C();
void BIT_5_D();
void BIT_5_E();
void BIT_5_H();
void BIT_5_L();
void BIT_5_0xHL();
void BIT_5_A();

// (0x70)
void BIT_6_B();
void BIT_6_C();
void BIT_6_D();
void BIT_6_E();
void BIT_6_H();
void BIT_6_L();
void BIT_6_0xHL();
void BIT_6_A();
void BIT_7_B();
void BIT_7_C();
void BIT_7_D();
void BIT_7_E();
void BIT_7_H();
void BIT_7_L();
void BIT_7_0xHL();
void BIT_7_A();

// (0x80)
void RES_0_B();
void RES_0_C();
void RES_0_D();
void RES_0_E();
void RES_0_H();
void RES_0_L();
void RES_0_0xHL();
void RES_0_A();
void RES_1_B();
void RES_1_C();
void RES_1_D();
void RES_1_E();
void RES_1_H();
void RES_1_L();
void RES_1_0xHL();
void RES_1_A();

// (0x90)
void RES_2_B();
void RES_2_C();
void RES_2_D();
void RES_2_E();
void RES_2_H();
void RES_2_L();
void RES_2_0xHL();
void RES_2_A();
void RES_3_B();
void RES_3_C();
void RES_3_D();
void RES_3_E();
void RES_3_H();
void RES_3_L();
void RES_3_0xHL();
void RES_3_A();

// (0xA0)
void RES_4_B();
void RES_4_C();
void RES_4_D();
void RES_4_E();
void RES_4_H();
void RES_4_L();
void RES_4_0xHL();
void RES_4_A();
void RES_5_B();
void RES_5_C();
void RES_5_D();
void RES_5_E();
void RES_5_H();
void RES_5_L();
void RES_5_0xHL();
void RES_5_A();

// (0xB0)
void RES_6_B();
void RES_6_C();
void RES_6_D();
void RES_6_E();
void RES_6_H();
void RES_6_L();
void RES_6_0xHL();
void RES_6_A();
void RES_7_B();
void RES_7_C();
void RES_7_D();
void RES_7_E();
void RES_7_H();
void RES_7_L();
void RES_7_0xHL();
void RES_7_A();

// (0xC0)
void SET_0_B();
void SET_0_C();
void SET_0_D();
void SET_0_E();
void SET_0_H();
void SET_0_L();
void SET_0_0xHL();
void SET_0_A();
void SET_1_B();
void SET_1_C();
void SET_1_D();
void SET_1_E();
void SET_1_H();
void SET_1_L();
void SET_1_0xHL();
void SET_1_A();

// (0xD0)
void SET_2_B();
void SET_2_C();
void SET_2_D();
void SET_2_E();
void SET_2_H();
void SET_2_L();
void SET_2_0xHL();
void SET_2_A();
void SET_3_B();
void SET_3_C();
void SET_3_D();
void SET_3_E();
void SET_3_H();
void SET_3_L();
void SET_3_0xHL();
void SET_3_A();

// (0xE0)
void SET_4_B();
void SET_4_C();
void SET_4_D();
void SET_4_E();
void SET_4_H();
void SET_4_L();
void SET_4_0xHL();
void SET_4_A();
void SET_5_B();
void SET_5_C();
void SET_5_D();
void SET_5_E();
void SET_5_H();
void SET_5_L();
void SET_5_0xHL();
void SET_5_A();

// (0xF0)
void SET_6_B();
void SET_6_C();
void SET_6_D();
void SET_6_E();
void SET_6_H();
void SET_6_L();
void SET_6_0xHL();
void SET_6_A();
void SET_7_B();
void SET_7_C();
void SET_7_D();
void SET_7_E();
void SET_7_H();
void SET_7_L();
void SET_7_0xHL();
void SET_7_A();

#endif